# Code generated by lxd-doc; DO NOT EDIT.

configs:
    cluster:
        - scheduler.instance:
            default: '`all`'
            longdesc: ""
            shortdesc: Possible values are `all`, `manual` and `group`. See {ref}`clustering-instance-placement` for more information.
            type: string
        - user.*:
            longdesc: ""
            shortdesc: Free form user key/value storage (can be used in search).
            type: string
    instance-boot:
        - boot.autostart:
            liveupdate: "no"
            longdesc: ""
            shortdesc: Controls whether to always start the instance when LXD starts (if not set, restore the last state)
            type: bool
        - boot.autostart.delay:
            default: 0
            liveupdate: "no"
            longdesc: ""
            shortdesc: Number of seconds to wait after the instance started before starting the next one
            type: integer
        - boot.autostart.priority:
            default: 0
            liveupdate: "no"
            longdesc: ""
            shortdesc: What order to start the instances in (starting with the highest value)
            type: integer
        - boot.stop.priority:
            default: 0
            liveupdate: "no"
            longdesc: ""
            shortdesc: What order to shut down the instances in (starting with the highest value)
            type: integer
        - boot.host_shutdown_timeout:
            default: 30
            liveupdate: "yes"
            longdesc: ""
            shortdesc: Seconds to wait for the instance to shut down before it is force-stopped
            type: integer
    instance-cloud-init:
        - cloud-init.network-config:
            condition: If supported by image
            default: '`DHCP on eth0`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Network configuration for `cloud-init` (content is used as seed value)
            type: string
        - cloud-init.user-data:
            condition: If supported by image
            default: '`#cloud-config`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: User data for `cloud-init` (content is used as seed value)
            type: string
        - cloud-init.vendor-data:
            condition: If supported by image
            default: '`#cloud-config`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Vendor data for `cloud-init` (content is used as seed value)
            type: string
        - user.network-config:
            condition: If supported by image
            default: '`DHCP on eth0`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Legacy version of `cloud-init.network-config`
            type: string
        - user.user-data:
            condition: If supported by image
            default: '`#cloud-config`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Legacy version of `cloud-init.user-data`
            type: string
        - user.vendor-data:
            condition: If supported by image
            default: '`#cloud-config`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Legacy version of `cloud-init.vendor-data`
            type: string
    instance-migration:
        - migration.incremental.memory:
            condition: container
            default: '`false`'
            liveupdate: "yes"
            longdesc: ""
            shortdesc: Controls whether to use incremental memory transfer of the instance’s memory to reduce downtime
            type: bool
        - migration.incremental.memory.iterations:
            condition: container
            default: '`10`'
            liveupdate: "yes"
            longdesc: ""
            shortdesc: Maximum number of transfer operations to go through before stopping the instance
            type: integer
        - migration.incremental.memory.goal:
            condition: container
            default: '`70`'
            liveupdate: "yes"
            longdesc: ""
            shortdesc: Percentage of memory to have in sync before stopping the instance
            type: integer
        - migration.stateful:
            condition: virtual machine
            default: '`false`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Controls whether to allow for stateful stop/start and snapshots (enabling this prevents the use of some features that are incompatible with it)
            type: bool
    instance-miscellaneous:
        - cluster.evacuate:
            default: '`auto`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Controls what to do when evacuating the instance (`auto`, `migrate`, `live-migrate`, or `stop`)
            type: string
        - linux.kernel_modules:
            condition: container
            liveupdate: "yes"
            longdesc: ""
            shortdesc: Comma-separated list of kernel modules to load before starting the instance
            type: string
        - linux.sysctl.*:
            condition: container
            liveupdate: "no"
            longdesc: ""
            shortdesc: Value to override the corresponding `sysctl` setting in the container
            type: string
        - environment.*:
            liveupdate: yes (exec)
            longdesc: ""
            shortdesc: Key/value environment variables to export to the instance and set for `lxc exec`
            type: string
        - user.*:
            liveupdate: "no"
            longdesc: ""
            shortdesc: Free-form user key/value storage (can be used in search)
            type: string
        - agent.nic_config:
            condition: virtual machine
            default: '`false`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Controls whether to set the name and MTU of the default network interfaces to be the same as the instance devices (this happens automatically for containers)
            type: bool
    instance-nvidia:
        - nvidia.runtime:
            condition: container
            default: '`false`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Controls whether to pass the host NVIDIA and CUDA runtime libraries into the instance
            type: bool
        - nvidia.driver.capabilities:
            condition: container
            default: '`compute,utility`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: What driver capabilities the instance needs (sets `libnvidia-container NVIDIA_DRIVER_CAPABILITIES`)
            type: string
        - nvidia.require.cuda:
            condition: container
            liveupdate: "no"
            longdesc: ""
            shortdesc: Version expression for the required CUDA version (sets `libnvidia-container NVIDIA_REQUIRE_CUDA`)
            type: string
        - nvidia.require.driver:
            condition: container
            liveupdate: "no"
            longdesc: ""
            shortdesc: Version expression for the required driver version (sets `libnvidia-container NVIDIA_REQUIRE_DRIVER`)
            type: string
    instance-raw:
        - raw.apparmor:
            liveupdate: "yes"
            longdesc: ""
            shortdesc: AppArmor profile entries to be appended to the generated profile
            type: blob
        - raw.idmap:
            condition: unprivileged container
            liveupdate: "no"
            longdesc: ""
            shortdesc: Raw idmap configuration (for example, `both 1000 1000`)
            type: blob
        - raw.lxc:
            condition: container
            liveupdate: "no"
            longdesc: ""
            shortdesc: Raw LXC configuration to be appended to the generated one
            type: blob
        - raw.seccomp:
            condition: container
            liveupdate: "no"
            longdesc: ""
            shortdesc: Raw Seccomp configuration
            type: blob
        - raw.qemu:
            condition: virtual machine
            liveupdate: "no"
            longdesc: ""
            shortdesc: Raw QEMU configuration to be appended to the generated command line
            type: blob
        - raw.qemu.conf:
            condition: virtual machine
            liveupdate: "no"
            longdesc: ""
            shortdesc: Addition/override to the generated `qemu.conf` file (see {ref}`instance-options-qemu`)
            type: blob
    instance-resource-limits:
        - limits.cpu:
            default: 'for VMs: 1 CPU'
            liveupdate: "yes"
            longdesc: ""
            shortdesc: Number or range of CPUs to expose to the instance; see {ref}`instance-options-limits-cpu`
            type: string
        - limits.cpu.nodes:
            liveupdate: "yes"
            longdesc: ""
            shortdesc: Comma-separated list of NUMA node IDs or ranges to place the instance CPUs on; see {ref}`instance-options-limits-cpu-container`
            type: string
        - limits.disk.priority:
            default: '`5` (medium)'
            liveupdate: "yes"
            longdesc: ""
            shortdesc: Controls how much priority to give to the instance’s I/O requests when under load (integer between 0 and 10)
            type: integer
        - limits.memory:
            default: 'for VMs: `1Gib`'
            liveupdate: "yes"
            longdesc: ""
            shortdesc: Percentage of the host's memory or fixed value in bytes (various suffixes supported, see {ref}`instances-limit-units`)
            type: string
        - limits.network.priority:
            default: '`0` (minimum)'
            liveupdate: "yes"
            longdesc: ""
            shortdesc: Controls how much priority to give to the instance’s network requests when under load (integer between 0 and 10)
            type: integer
        - limits.cpu.allowance:
            condition: container
            default: 100%
            liveupdate: "yes"
            longdesc: ""
            shortdesc: 'Controls how much of the CPU can be used: either a percentage (`50%`) for a soft limit or a chunk of time (`25ms/100ms`) for a hard limit; see {ref}`instance-options-limits-cpu-container`'
            type: string
        - limits.cpu.priority:
            condition: container
            default: '`10` (maximum)'
            liveupdate: "yes"
            longdesc: ""
            shortdesc: CPU scheduling priority compared to other instances sharing the same CPUs when overcommitting resources (integer between 0 and 10); see {ref}`instance-options-limits-cpu-container`
            type: integer
        - limits.hugepages.64KB:
            condition: container
            liveupdate: "yes"
            longdesc: ""
            shortdesc: Fixed value in bytes (various suffixes supported, see {ref}`instances-limit-units`) to limit number of 64 KB huge pages; see {ref}`instance-options-limits-hugepages`
            type: string
        - limits.hugepages.1MB:
            condition: container
            liveupdate: "yes"
            longdesc: ""
            shortdesc: Fixed value in bytes (various suffixes supported, see {ref}`instances-limit-units`) to limit number of 1 MB huge pages; see {ref}`instance-options-limits-hugepages`
            type: string
        - limits.hugepages.2MB:
            condition: container
            liveupdate: "yes"
            longdesc: ""
            shortdesc: Fixed value in bytes (various suffixes supported, see {ref}`instances-limit-units`) to limit number of 2 MB huge pages; see {ref}`instance-options-limits-hugepages`
            type: string
        - limits.hugepages.1GB:
            condition: container
            liveupdate: "yes"
            longdesc: ""
            shortdesc: Fixed value in bytes (various suffixes supported, see {ref}`instances-limit-units`) to limit number of 1 GB huge pages; see {ref}`instance-options-limits-hugepages`
            type: string
        - limits.memory.enforce:
            condition: container
            default: '`hard`'
            liveupdate: "yes"
            longdesc: ""
            shortdesc: If `hard`, the instance cannot exceed its memory limit; if `soft`, the instance can exceed its memory limit when extra host memory is available
            type: string
        - limits.memory.swap:
            condition: container
            default: '`true`'
            liveupdate: "yes"
            longdesc: ""
            shortdesc: Controls whether to encourage/discourage swapping less used pages for this instance
            type: bool
        - limits.memory.swap.priority:
            condition: container
            default: '`10` (maximum)'
            liveupdate: "yes"
            longdesc: ""
            shortdesc: Prevents the instance from being swapped to disk (integer between 0 and 10; the higher the value, the less likely the instance is to be swapped to disk)
            type: integer
        - limits.processes:
            condition: container
            default: -(max)
            liveupdate: "yes"
            longdesc: ""
            shortdesc: Maximum number of processes that can run in the instance
            type: integer
        - limits.memory.hugepages:
            condition: virtual machine
            default: '`false`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Controls whether to back the instance using huge pages rather than regular system memory
            type: bool
    instance-security:
        - security.devlxd:
            default: '`true`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Controls the presence of `/dev/lxd` in the instance
            type: bool
        - security.protection.delete:
            default: '`false`'
            liveupdate: "yes"
            longdesc: ""
            shortdesc: Prevents the instance from being deleted
            type: bool
        - security.devlxd.images:
            condition: container
            default: '`false`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Controls the availability of the `/1.0/images` API over `devlxd`
            type: bool
        - security.idmap.base:
            condition: unprivileged container
            liveupdate: "no"
            longdesc: ""
            shortdesc: The base host ID to use for the allocation (overrides auto-detection)
            type: integer
        - security.idmap.isolated:
            condition: unprivileged container
            default: '`false`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Controls whether to use an idmap for this instance that is unique among instances with isolated set
            type: bool
        - security.idmap.size:
            condition: unprivileged container
            liveupdate: "no"
            longdesc: ""
            shortdesc: The size of the idmap to use
            type: integer
        - security.nesting:
            condition: container
            default: '`false`'
            liveupdate: "yes"
            longdesc: ""
            shortdesc: Controls whether to support running LXD (nested) inside the instance
            type: bool
        - security.privileged:
            condition: container
            default: '`false`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Controls whether to run the instance in privileged mode
            type: bool
        - security.protection.shift:
            condition: container
            default: '`false`'
            liveupdate: "yes"
            longdesc: ""
            shortdesc: Prevents the instance’s file system from being UID/GID shifted on startup
            type: bool
        - security.syscalls.allow:
            condition: container
            liveupdate: "no"
            longdesc: ""
            shortdesc: A `\n`-separated list of syscalls to allow (mutually exclusive with `security.syscalls.deny*`)
            type: string
        - security.syscalls.blacklist_default:
            condition: container
            liveupdate: "no"
            longdesc: ""
            shortdesc: A `\n`-separated list of syscalls to allow (mutually exclusive with `security.syscalls.deny*`)
            type: string
        - security.syscalls.deny_default:
            condition: container
            default: '`true`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Controls whether to enable the default syscall deny
            type: bool
        - security.syscalls.deny_compat:
            condition: container
            default: '`false`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: On `x86_64`, controls whether to block `compat_*` syscalls (no-op on other architectures)
            type: bool
        - security.syscalls.deny:
            condition: container
            liveupdate: "no"
            longdesc: ""
            shortdesc: A `\n`-separated list of syscalls to deny
            type: string
        - security.syscalls.intercept.bpf:
            condition: container
            default: '`false`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Controls whether to handle the bpf system call
            type: bool
        - security.syscalls.intercept.bpf.devices:
            condition: container
            default: '`false`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Controls whether to allow bpf programs for the devices cgroup in the unified hierarchy to be loaded
            type: bool
        - security.syscalls.intercept.mknod:
            condition: container
            default: '`false`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Controls whether to handle the `mknod` and `mknodat` system calls (allows creation of a limited subset of char/block devices)
            type: bool
        - security.syscalls.intercept.mount:
            condition: container
            default: '`false`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Controls whether to handle the `mount` system call
            type: bool
        - security.syscalls.intercept.mount.allowed:
            condition: container
            liveupdate: "yes"
            longdesc: ""
            shortdesc: A comma-separated list of file systems that are safe to mount for processes inside the instance
            type: string
        - security.syscalls.intercept.mount.fuse:
            condition: container
            liveupdate: "yes"
            longdesc: ""
            shortdesc: Mounts of a given file system that should be redirected to their FUSE implementation (for example, `ext4=fuse2fs`)
            type: string
        - security.syscalls.intercept.mount.shift:
            condition: container
            default: '`false`'
            liveupdate: "yes"
            longdesc: ""
            shortdesc: Controls whether to mount `shiftfs` on top of file systems handled through mount syscall interception
            type: bool
        - security.syscalls.intercept.sched_setcheduler:
            condition: container
            default: '`false`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Controls whether to handle the `sched_setscheduler` system call (allows increasing process priority)
            type: bool
        - security.syscalls.intercept.setxattr:
            condition: container
            default: '`false`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Controls whether to handle the `setxattr` system call (allows setting a limited subset of restricted extended attributes)
            type: bool
        - security.syscalls.intercept.sysinfo:
            condition: container
            default: '`false`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Controls whether to handle the `sysinfo` system call (to get cgroup-based resource usage information)
            type: bool
        - security.agent.metrics:
            condition: virtual machine
            default: '`true`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Controls whether the `lxd-agent` is queried for state information and metrics
            type: bool
        - security.csm:
            condition: virtual machine
            default: '`false`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Controls whether to use a firmware that supports UEFI-incompatible operating systems (when enabling this option, set `security.secureboot` to `false`)
            type: bool
        - security.secureboot:
            condition: virtual machine
            default: '`true`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Controls whether UEFI secure boot is enabled with the default Microsoft keys (when disabling this option, consider enabling `security.csm`)
            type: bool
        - security.sev:
            condition: virtual machine
            default: '`false`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Controls whether AMD SEV (Secure Encrypted Virtualization) is enabled for this VM
            type: bool
        - security.sev.policy.es:
            condition: virtual machine
            default: '`false`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Controls whether AMD SEV-ES (SEV Encrypted State) is enabled for this VM
            type: bool
        - security.sev.session.dh:
            condition: virtual machine
            default: '`true`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: The guest owner’s `base64`-encoded Diffie-Hellman key
            type: string
        - security.sev.session.data:
            condition: virtual machine
            default: '`true`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: The guest owner’s `base64`-encoded session blob
            type: string
    instance-snapshots:
        - snapshots.schedule:
            liveupdate: "no"
            longdesc: ""
            shortdesc: Cron expression (`<minute> <hour> <dom> <month> <dow>`), a comma-separated list of schedule aliases (`@hourly`, `@daily`, `@midnight`, `@weekly`, `@monthly`, `@annually`, `@yearly`), or empty to disable automatic snapshots (the default)
            type: string
        - snapshots.schedule.stopped:
            default: '`false`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Controls whether to automatically snapshot stopped instances
            type: bool
        - snapshots.pattern:
            default: '`snap%d`'
            liveupdate: "no"
            longdesc: ""
            shortdesc: Pongo2 template string that represents the snapshot name (used for scheduled snapshots and unnamed snapshots); see {ref}`instance-options-snapshots-names`
            type: string
        - snapshots.expiry:
            liveupdate: "no"
            longdesc: ""
            shortdesc: Controls when snapshots are to be deleted (expects an expression like `1M 2H 3d 4w 5m 6y`)
            type: string
    instance-volatile:
        - volatile.apply_template:
            longdesc: ""
            shortdesc: The name of a template hook that should be triggered upon next startup
            type: string
        - volatile.base_image:
            longdesc: ""
            shortdesc: The hash of the image the instance was created from (if any)
            type: string
        - volatile.cloud_init.instance-id:
            longdesc: ""
            shortdesc: The `instance-id` (UUID) exposed to `cloud-init`
            type: string
        - volatile.evacuate.origin:
            longdesc: ""
            shortdesc: The origin (cluster member) of the evacuated instance
            type: string
        - volatile.last_state.power:
            longdesc: ""
            shortdesc: Instance state as of last host shutdown
            type: string
        - volatile.uuid:
            longdesc: ""
            shortdesc: Instance UUID (globally unique across all servers and projects)
            type: string
        - volatile.uuid.generation:
            longdesc: ""
            shortdesc: Instance generation UUID that will change whenever the instance’s place in time moves backwards (globally unique across all servers and projects)
            type: string
        - volatile.<name>.apply_quota:
            longdesc: ""
            shortdesc: Disk quota to be applied the next time the instance starts
            type: string
        - volatile.<name>.ceph_rbd:
            longdesc: ""
            shortdesc: RBD device path for Ceph disk devices
            type: string
        - volatile.<name>.host_name:
            longdesc: ""
            shortdesc: Network device name on the host
            type: string
        - volatile.<name>.hwaddr:
            longdesc: ""
            shortdesc: Network device MAC address (when no `hwaddr` property is set on the device itself)
            type: string
        - volatile.<name>.last_state.created:
            longdesc: ""
            shortdesc: Whether the network device physical device was created (`true` or `false`)
            type: string
        - volatile.<name>.last_state.mtu:
            longdesc: ""
            shortdesc: Network device original MTU used when moving a physical device into an instance
            type: string
        - volatile.<name>.last_state.hwaddr:
            longdesc: ""
            shortdesc: Network device original MAC used when moving a physical device into an instance
            type: string
        - volatile.<name>.last_state.ip_addresses:
            longdesc: ""
            shortdesc: Network device comma-separated list of last used IP addresses
            type: string
        - volatile.<name>.last_state.vdpa.name:
            longdesc: ""
            shortdesc: VDPA device name used when moving a VDPA device file descriptor into an instance
            type: string
        - volatile.<name>.last_state.vf.id:
            longdesc: ""
            shortdesc: SR-IOV virtual function ID used when moving a VF into an instance
            type: string
        - volatile.<name>.last_state.vf.hwaddr:
            longdesc: ""
            shortdesc: SR-IOV virtual function original MAC used when moving a VF into an instance
            type: string
        - volatile.<name>.last_state.vf.vlan:
            longdesc: ""
            shortdesc: SR-IOV virtual function original VLAN used when moving a VF into an instance
            type: string
        - volatile.<name>.last_state.vf.spoofcheck:
            longdesc: ""
            shortdesc: SR-IOV virtual function original spoof check setting used when moving a VF into an instance
            type: string
        - volatile.last_state.idmap:
            longdesc: ""
            shortdesc: Serialized instance UID/GID map
            type: string
        - volatile.idmap.base:
            longdesc: ""
            shortdesc: The first ID in the instance’s primary idmap range
            type: integer
        - volatile.idmap.current:
            longdesc: ""
            shortdesc: The idmap currently in use by the instance
            type: string
        - volatile.idmap.next:
            longdesc: ""
            shortdesc: The idmap to use the next time the instance starts
            type: string
        - volatile.apply_nvram:
            longdesc: ""
            shortdesc: Whether to regenerate VM NVRAM the next time the instance starts
            type: string
        - volatile.vsock_id:
            longdesc: ""
            shortdesc: Instance `vsock ID` used as of last start
            type: string
    server-acme:
        - acme.ca_url:
            default: '`https://acme-v02.api.letsencrypt.org/directory`'
            longdesc: ""
            scope: global
            shortdesc: Agree to ACME terms of service
            type: string
        - acme.domain:
            longdesc: ""
            scope: global
            shortdesc: Domain for which the certificate is issued
            type: string
        - acme.email:
            longdesc: ""
            scope: global
            shortdesc: Email address used for the account registration
            type: string
        - acme.agree_tos:
            default: '`false`'
            longdesc: ""
            scope: global
            shortdesc: Agree to ACME terms of service
            type: bool
    server-candid-and-rbac:
        - candid.api_key:
            longdesc: ""
            scope: global
            shortdesc: Public key of the Candid server (required for HTTP-only servers)
            type: string
        - candid.api_url:
            longdesc: ""
            scope: global
            shortdesc: URL of the external authentication endpoint using Candid
            type: string
        - candid.domains:
            longdesc: ""
            scope: global
            shortdesc: Comma-separated list of allowed Candid domains (empty string means all domains are valid)
            type: string
        - candid.expiry:
            default: '`3600`'
            longdesc: ""
            scope: global
            shortdesc: Candid macaroon expiry in seconds
            type: integer
        - rbac.agent.url:
            longdesc: ""
            scope: global
            shortdesc: URL of the Candid agent as provided during RBAC registration
            type: string
        - rbac.agent.username:
            longdesc: ""
            scope: global
            shortdesc: User name of the Candid agent as provided during RBAC registration
            type: string
        - rbac.agent.private_key:
            longdesc: ""
            scope: global
            shortdesc: Private key of the Candid agent as provided during RBAC registration
            type: string
        - rbac.agent.public_key:
            longdesc: ""
            scope: global
            shortdesc: Public key of the Candid agent as provided during RBAC registration
            type: string
        - rbac.api.expiry:
            longdesc: ""
            scope: global
            shortdesc: RBAC macaroon expiry in seconds
            type: integer
        - rbac.api.key:
            longdesc: ""
            scope: global
            shortdesc: Public key of the RBAC server (required for HTTP-only servers)
            type: string
        - rbac.api.url:
            longdesc: ""
            scope: global
            shortdesc: URL of the external RBAC server
            type: string
    server-cluster:
        - cluster.offline_threshold:
            default: '`20`'
            longdesc: ""
            scope: global
            shortdesc: Number of seconds after which an unresponsive member is considered offline
            type: integer
        - cluster.images_minimal_replica:
            default: '`3`'
            longdesc: ""
            scope: global
            shortdesc: Minimal number of cluster members with a copy of a particular image (set to `1` for no replication or to `-1` for all members)
            type: integer
        - cluster.healing_threshold:
            default: '`0`'
            longdesc: ""
            scope: global
            shortdesc: Number of seconds after which an offline cluster member is to be evacuated (set to `0` to disable)
            type: integer
        - cluster.join_token_expiry:
            default: '`3H`'
            longdesc: ""
            scope: global
            shortdesc: Time after which a cluster join token expires
            type: string
        - cluster.max_voters:
            default: '`3`'
            longdesc: ""
            scope: global
            shortdesc: Maximum number of cluster members that are assigned the database voter role (must be an odd number >= `3`)
            type: integer
        - cluster.max_standby:
            default: '`2`'
            longdesc: ""
            scope: global
            shortdesc: Maximum number of cluster members that are assigned the database stand-by role (must be between `0` and `5`)
            type: integer
        - cluster.https_address:
            longdesc: ""
            scope: local
            shortdesc: Address to use for clustering traffic
            type: string
    server-core:
        - core.metrics_authentication:
            default: '`true`'
            longdesc: ""
            scope: global
            shortdesc: Whether to enforce authentication on the metrics endpoint
            type: bool
        - core.bgp_asn:
            longdesc: ""
            scope: global
            shortdesc: The BGP Autonomous System Number to use for the local server
            type: string
        - core.https_allowed_headers:
            longdesc: ""
            scope: global
            shortdesc: '`Access-Control-Allow-Headers` HTTP header value'
            type: string
        - core.https_allowed_methods:
            longdesc: ""
            scope: global
            shortdesc: '`Access-Control-Allow-Methods` HTTP header value'
            type: string
        - core.https_allowed_origin:
            longdesc: ""
            scope: global
            shortdesc: '`Access-Control-Allow-Origin` HTTP header value'
            type: string
        - core.https_allowed_credentials:
            longdesc: ""
            scope: global
            shortdesc: Whether to set the `Access-Control-Allow-Credentials` HTTP header value to `true`
            type: bool
        - core.https_trusted_proxy:
            longdesc: ""
            scope: global
            shortdesc: Comma-separated list of IP addresses of trusted servers to provide the client’s address through the proxy connection header
            type: string
        - core.proxy_http:
            longdesc: ""
            scope: global
            shortdesc: HTTP proxy to use, if any (falls back to `HTTP_PROXY` environment variable)
            type: string
        - core.proxy_https:
            longdesc: ""
            scope: global
            shortdesc: HTTPS proxy to use, if any (falls back to `HTTPS_PROXY` environment variable)
            type: string
        - core.proxy_ignore_hosts:
            longdesc: ""
            scope: global
            shortdesc: Hosts that don’t need the proxy (similar format to `NO_PROXY`, for example, `1.2.3.4,1.2.3.5`, falls back to `NO_PROXY` environment variable)
            type: string
        - core.remote_token_expiry:
            longdesc: ""
            scope: global
            shortdesc: Time after which a remote add token expires (defaults to no expiry)
            type: string
        - core.shutdown_timeout:
            default: '`5`'
            longdesc: ""
            scope: global
            shortdesc: Number of minutes to wait for running operations to complete before the LXD server shuts down
            type: integer
        - core.trust_password:
            longdesc: ""
            scope: global
            shortdesc: Password to be provided by clients to set up a trust
            type: string
        - core.trust_ca_certificates:
            longdesc: ""
            scope: global
            shortdesc: Whether to automatically trust clients signed by the CA
            type: bool
        - core.https_address:
            longdesc: ""
            scope: local
            shortdesc: Address to bind for the remote API (HTTPS)
            type: string
        - core.bgp_address:
            longdesc: ""
            scope: local
            shortdesc: Address to bind the BGP server to (BGP)
            type: string
        - core.bgp_routerid:
            longdesc: ""
            scope: local
            shortdesc: A unique identifier for this BGP server (formatted as an IPv4 address)
            type: string
        - core.debug_address:
            longdesc: ""
            scope: local
            shortdesc: Address to bind the `pprof` debug server to (HTTP)
            type: string
        - core.dns_address:
            longdesc: ""
            scope: local
            shortdesc: Address to bind the authoritative DNS server to (DNS)
            type: string
        - core.metrics_address:
            longdesc: ""
            scope: local
            shortdesc: Address to bind the metrics server to (HTTPS)
            type: string
        - core.storage_buckets_address:
            longdesc: ""
            scope: local
            shortdesc: Address to bind the storage object server to (HTTPS)
            type: string
    server-images:
        - images.auto_update_cached:
            default: '`true`'
            longdesc: ""
            scope: global
            shortdesc: Whether to automatically update any image that LXD caches
            type: bool
        - images.auto_update_interval:
            default: '`6`'
            longdesc: ""
            scope: global
            shortdesc: Interval (in hours) at which to look for updates to cached images (`0` to disable)
            type: integer
        - images.compression_algorithm:
            default: '`gzip`'
            longdesc: ""
            scope: global
            shortdesc: Compression algorithm to use for new images (`bzip2`, `gzip`, `lzma`, `xz` or `none`)
            type: string
        - images.default_architecture:
            longdesc: ""
            shortdesc: Default architecture to use in a mixed-architecture cluster
            type: string
        - images.remote_cache_expiry:
            default: '`10`'
            longdesc: ""
            scope: global
            shortdesc: Number of days after which an unused cached remote image is flushed
            type: integer
    server-loki:
        - loki.auth.username:
            longdesc: ""
            scope: global
            shortdesc: The user name used for authentication
            type: string
        - loki.auth.password:
            longdesc: ""
            scope: global
            shortdesc: The password used for authentication
            type: string
        - loki.api.ca_cert:
            longdesc: ""
            scope: global
            shortdesc: The CA certificate for the Loki server
            type: string
        - loki.api.url:
            longdesc: ""
            scope: global
            shortdesc: The URL to the Loki server
            type: string
        - loki.labels:
            longdesc: ""
            scope: global
            shortdesc: Comma-separated list of values that should be used as labels for a Loki log entry
            type: string
        - loki.loglevel:
            default: '`info`'
            longdesc: ""
            scope: global
            shortdesc: Minimum log level to send to the Loki server
            type: string
        - loki.types:
            default: '`lifecycle,logging`'
            longdesc: ""
            scope: global
            shortdesc: Comma-separated list of events to send to the Loki server (`lifecycle` and/or `logging`)
            type: string
    server-miscellaneous:
        - backups.compression_algorithm:
            default: '`gzip`'
            longdesc: ""
            scope: global
            shortdesc: Compression algorithm to use for backups (`bzip2`, `gzip`, `lzma`, `xz` or `none`)
            type: string
        - instances.nic.host_name:
            default: '`random`'
            longdesc: ""
            scope: global
            shortdesc: If set to `random`, use the random host interface name as the host name; if set to `mac`, generate a host name in the form `lxd<mac_address>` (MAC without leading two digits)
            type: string
        - instances.placement.scriptlet:
            longdesc: ""
            scope: global
            shortdesc: Stores the {ref}`clustering-instance-placement-scriptlet` for custom automatic instance placement logic
            type: string
        - maas.api.key:
            longdesc: ""
            scope: global
            shortdesc: API key to manage MAAS
            type: string
        - maas.api.url:
            longdesc: ""
            scope: global
            shortdesc: URL of the MAAS server
            type: string
        - network.ovn.integration_bridge:
            default: '`br-int`'
            longdesc: ""
            scope: global
            shortdesc: OVS integration bridge to use for OVN networks
            type: string
        - network.ovn.northbound_connection:
            default: '`unix:/var/run/ovn/ovnnb_db.sock`'
            longdesc: ""
            scope: global
            shortdesc: OVN northbound database connection string
            type: string
        - maas.machine:
            default: host name
            longdesc: ""
            scope: local
            shortdesc: Name of this LXD host in MAAS
            type: string
        - storage.backups_volume:
            longdesc: ""
            scope: local
            shortdesc: Volume to use to store the backup tarballs (syntax is `POOL/VOLUME`)
            type: string
        - storage.images_volume:
            longdesc: ""
            scope: local
            shortdesc: Volume to use to store the image tarballs (syntax is `POOL/VOLUME`)
            type: string
    server-oidc:
        - oidc.client.id:
            longdesc: ""
            scope: global
            shortdesc: OpenID Connect client ID
            type: string
        - oidc.issuer:
            longdesc: ""
            scope: global
            shortdesc: OpenID Connect Discovery URL for the provider
            type: string
        - oidc.audience:
            longdesc: ""
            scope: global
            shortdesc: Expected audience value for the application (required by some providers)
            type: string
