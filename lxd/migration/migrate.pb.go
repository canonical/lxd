// silence the protobuf compiler warning by setting the default

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.2
// source: lxd/migration/migrate.proto

package migration

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MigrationFSType int32

const (
	MigrationFSType_RSYNC           MigrationFSType = 0
	MigrationFSType_BTRFS           MigrationFSType = 1
	MigrationFSType_ZFS             MigrationFSType = 2
	MigrationFSType_RBD             MigrationFSType = 3
	MigrationFSType_BLOCK_AND_RSYNC MigrationFSType = 4
)

// Enum value maps for MigrationFSType.
var (
	MigrationFSType_name = map[int32]string{
		0: "RSYNC",
		1: "BTRFS",
		2: "ZFS",
		3: "RBD",
		4: "BLOCK_AND_RSYNC",
	}
	MigrationFSType_value = map[string]int32{
		"RSYNC":           0,
		"BTRFS":           1,
		"ZFS":             2,
		"RBD":             3,
		"BLOCK_AND_RSYNC": 4,
	}
)

func (x MigrationFSType) Enum() *MigrationFSType {
	p := new(MigrationFSType)
	*p = x
	return p
}

func (x MigrationFSType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MigrationFSType) Descriptor() protoreflect.EnumDescriptor {
	return file_lxd_migration_migrate_proto_enumTypes[0].Descriptor()
}

func (MigrationFSType) Type() protoreflect.EnumType {
	return &file_lxd_migration_migrate_proto_enumTypes[0]
}

func (x MigrationFSType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *MigrationFSType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = MigrationFSType(num)
	return nil
}

// Deprecated: Use MigrationFSType.Descriptor instead.
func (MigrationFSType) EnumDescriptor() ([]byte, []int) {
	return file_lxd_migration_migrate_proto_rawDescGZIP(), []int{0}
}

type CRIUType int32

const (
	CRIUType_CRIU_RSYNC CRIUType = 0
	CRIUType_PHAUL      CRIUType = 1
	CRIUType_NONE       CRIUType = 2
	CRIUType_VM_QEMU    CRIUType = 3
)

// Enum value maps for CRIUType.
var (
	CRIUType_name = map[int32]string{
		0: "CRIU_RSYNC",
		1: "PHAUL",
		2: "NONE",
		3: "VM_QEMU",
	}
	CRIUType_value = map[string]int32{
		"CRIU_RSYNC": 0,
		"PHAUL":      1,
		"NONE":       2,
		"VM_QEMU":    3,
	}
)

func (x CRIUType) Enum() *CRIUType {
	p := new(CRIUType)
	*p = x
	return p
}

func (x CRIUType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CRIUType) Descriptor() protoreflect.EnumDescriptor {
	return file_lxd_migration_migrate_proto_enumTypes[1].Descriptor()
}

func (CRIUType) Type() protoreflect.EnumType {
	return &file_lxd_migration_migrate_proto_enumTypes[1]
}

func (x CRIUType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CRIUType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CRIUType(num)
	return nil
}

// Deprecated: Use CRIUType.Descriptor instead.
func (CRIUType) EnumDescriptor() ([]byte, []int) {
	return file_lxd_migration_migrate_proto_rawDescGZIP(), []int{1}
}

type IDMapType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Isuid    *bool  `protobuf:"varint,1,req,name=isuid" json:"isuid,omitempty"`
	Isgid    *bool  `protobuf:"varint,2,req,name=isgid" json:"isgid,omitempty"`
	Hostid   *int32 `protobuf:"varint,3,req,name=hostid" json:"hostid,omitempty"`
	Nsid     *int32 `protobuf:"varint,4,req,name=nsid" json:"nsid,omitempty"`
	Maprange *int32 `protobuf:"varint,5,req,name=maprange" json:"maprange,omitempty"`
}

func (x *IDMapType) Reset() {
	*x = IDMapType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lxd_migration_migrate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDMapType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDMapType) ProtoMessage() {}

func (x *IDMapType) ProtoReflect() protoreflect.Message {
	mi := &file_lxd_migration_migrate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDMapType.ProtoReflect.Descriptor instead.
func (*IDMapType) Descriptor() ([]byte, []int) {
	return file_lxd_migration_migrate_proto_rawDescGZIP(), []int{0}
}

func (x *IDMapType) GetIsuid() bool {
	if x != nil && x.Isuid != nil {
		return *x.Isuid
	}
	return false
}

func (x *IDMapType) GetIsgid() bool {
	if x != nil && x.Isgid != nil {
		return *x.Isgid
	}
	return false
}

func (x *IDMapType) GetHostid() int32 {
	if x != nil && x.Hostid != nil {
		return *x.Hostid
	}
	return 0
}

func (x *IDMapType) GetNsid() int32 {
	if x != nil && x.Nsid != nil {
		return *x.Nsid
	}
	return 0
}

func (x *IDMapType) GetMaprange() int32 {
	if x != nil && x.Maprange != nil {
		return *x.Maprange
	}
	return 0
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *string `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lxd_migration_migrate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_lxd_migration_migrate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_lxd_migration_migrate_proto_rawDescGZIP(), []int{1}
}

func (x *Config) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *Config) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   *string   `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Config []*Config `protobuf:"bytes,2,rep,name=config" json:"config,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lxd_migration_migrate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_lxd_migration_migrate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_lxd_migration_migrate_proto_rawDescGZIP(), []int{2}
}

func (x *Device) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Device) GetConfig() []*Config {
	if x != nil {
		return x.Config
	}
	return nil
}

type Snapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         *string   `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	LocalConfig  []*Config `protobuf:"bytes,2,rep,name=localConfig" json:"localConfig,omitempty"`
	Profiles     []string  `protobuf:"bytes,3,rep,name=profiles" json:"profiles,omitempty"`
	Ephemeral    *bool     `protobuf:"varint,4,req,name=ephemeral" json:"ephemeral,omitempty"`
	LocalDevices []*Device `protobuf:"bytes,5,rep,name=localDevices" json:"localDevices,omitempty"`
	Architecture *int32    `protobuf:"varint,6,req,name=architecture" json:"architecture,omitempty"`
	Stateful     *bool     `protobuf:"varint,7,req,name=stateful" json:"stateful,omitempty"`
	CreationDate *int64    `protobuf:"varint,8,opt,name=creation_date,json=creationDate" json:"creation_date,omitempty"`
	LastUsedDate *int64    `protobuf:"varint,9,opt,name=last_used_date,json=lastUsedDate" json:"last_used_date,omitempty"`
	ExpiryDate   *int64    `protobuf:"varint,10,opt,name=expiry_date,json=expiryDate" json:"expiry_date,omitempty"`
}

func (x *Snapshot) Reset() {
	*x = Snapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lxd_migration_migrate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Snapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Snapshot) ProtoMessage() {}

func (x *Snapshot) ProtoReflect() protoreflect.Message {
	mi := &file_lxd_migration_migrate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Snapshot.ProtoReflect.Descriptor instead.
func (*Snapshot) Descriptor() ([]byte, []int) {
	return file_lxd_migration_migrate_proto_rawDescGZIP(), []int{3}
}

func (x *Snapshot) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Snapshot) GetLocalConfig() []*Config {
	if x != nil {
		return x.LocalConfig
	}
	return nil
}

func (x *Snapshot) GetProfiles() []string {
	if x != nil {
		return x.Profiles
	}
	return nil
}

func (x *Snapshot) GetEphemeral() bool {
	if x != nil && x.Ephemeral != nil {
		return *x.Ephemeral
	}
	return false
}

func (x *Snapshot) GetLocalDevices() []*Device {
	if x != nil {
		return x.LocalDevices
	}
	return nil
}

func (x *Snapshot) GetArchitecture() int32 {
	if x != nil && x.Architecture != nil {
		return *x.Architecture
	}
	return 0
}

func (x *Snapshot) GetStateful() bool {
	if x != nil && x.Stateful != nil {
		return *x.Stateful
	}
	return false
}

func (x *Snapshot) GetCreationDate() int64 {
	if x != nil && x.CreationDate != nil {
		return *x.CreationDate
	}
	return 0
}

func (x *Snapshot) GetLastUsedDate() int64 {
	if x != nil && x.LastUsedDate != nil {
		return *x.LastUsedDate
	}
	return 0
}

func (x *Snapshot) GetExpiryDate() int64 {
	if x != nil && x.ExpiryDate != nil {
		return *x.ExpiryDate
	}
	return 0
}

type RsyncFeatures struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Xattrs        *bool `protobuf:"varint,1,opt,name=xattrs" json:"xattrs,omitempty"`
	Delete        *bool `protobuf:"varint,2,opt,name=delete" json:"delete,omitempty"`
	Compress      *bool `protobuf:"varint,3,opt,name=compress" json:"compress,omitempty"`
	Bidirectional *bool `protobuf:"varint,4,opt,name=bidirectional" json:"bidirectional,omitempty"`
}

func (x *RsyncFeatures) Reset() {
	*x = RsyncFeatures{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lxd_migration_migrate_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RsyncFeatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RsyncFeatures) ProtoMessage() {}

func (x *RsyncFeatures) ProtoReflect() protoreflect.Message {
	mi := &file_lxd_migration_migrate_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RsyncFeatures.ProtoReflect.Descriptor instead.
func (*RsyncFeatures) Descriptor() ([]byte, []int) {
	return file_lxd_migration_migrate_proto_rawDescGZIP(), []int{4}
}

func (x *RsyncFeatures) GetXattrs() bool {
	if x != nil && x.Xattrs != nil {
		return *x.Xattrs
	}
	return false
}

func (x *RsyncFeatures) GetDelete() bool {
	if x != nil && x.Delete != nil {
		return *x.Delete
	}
	return false
}

func (x *RsyncFeatures) GetCompress() bool {
	if x != nil && x.Compress != nil {
		return *x.Compress
	}
	return false
}

func (x *RsyncFeatures) GetBidirectional() bool {
	if x != nil && x.Bidirectional != nil {
		return *x.Bidirectional
	}
	return false
}

type ZfsFeatures struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Compress        *bool `protobuf:"varint,1,opt,name=compress" json:"compress,omitempty"`
	MigrationHeader *bool `protobuf:"varint,2,opt,name=migration_header,json=migrationHeader" json:"migration_header,omitempty"`
	HeaderZvols     *bool `protobuf:"varint,3,opt,name=header_zvols,json=headerZvols" json:"header_zvols,omitempty"`
}

func (x *ZfsFeatures) Reset() {
	*x = ZfsFeatures{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lxd_migration_migrate_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZfsFeatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZfsFeatures) ProtoMessage() {}

func (x *ZfsFeatures) ProtoReflect() protoreflect.Message {
	mi := &file_lxd_migration_migrate_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZfsFeatures.ProtoReflect.Descriptor instead.
func (*ZfsFeatures) Descriptor() ([]byte, []int) {
	return file_lxd_migration_migrate_proto_rawDescGZIP(), []int{5}
}

func (x *ZfsFeatures) GetCompress() bool {
	if x != nil && x.Compress != nil {
		return *x.Compress
	}
	return false
}

func (x *ZfsFeatures) GetMigrationHeader() bool {
	if x != nil && x.MigrationHeader != nil {
		return *x.MigrationHeader
	}
	return false
}

func (x *ZfsFeatures) GetHeaderZvols() bool {
	if x != nil && x.HeaderZvols != nil {
		return *x.HeaderZvols
	}
	return false
}

type BtrfsFeatures struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MigrationHeader      *bool `protobuf:"varint,1,opt,name=migration_header,json=migrationHeader" json:"migration_header,omitempty"`
	HeaderSubvolumes     *bool `protobuf:"varint,2,opt,name=header_subvolumes,json=headerSubvolumes" json:"header_subvolumes,omitempty"`
	HeaderSubvolumeUuids *bool `protobuf:"varint,3,opt,name=header_subvolume_uuids,json=headerSubvolumeUuids" json:"header_subvolume_uuids,omitempty"`
}

func (x *BtrfsFeatures) Reset() {
	*x = BtrfsFeatures{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lxd_migration_migrate_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BtrfsFeatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BtrfsFeatures) ProtoMessage() {}

func (x *BtrfsFeatures) ProtoReflect() protoreflect.Message {
	mi := &file_lxd_migration_migrate_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BtrfsFeatures.ProtoReflect.Descriptor instead.
func (*BtrfsFeatures) Descriptor() ([]byte, []int) {
	return file_lxd_migration_migrate_proto_rawDescGZIP(), []int{6}
}

func (x *BtrfsFeatures) GetMigrationHeader() bool {
	if x != nil && x.MigrationHeader != nil {
		return *x.MigrationHeader
	}
	return false
}

func (x *BtrfsFeatures) GetHeaderSubvolumes() bool {
	if x != nil && x.HeaderSubvolumes != nil {
		return *x.HeaderSubvolumes
	}
	return false
}

func (x *BtrfsFeatures) GetHeaderSubvolumeUuids() bool {
	if x != nil && x.HeaderSubvolumeUuids != nil {
		return *x.HeaderSubvolumeUuids
	}
	return false
}

type CPUInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandName        *string                          `protobuf:"bytes,1,opt,name=brand_name,json=brandName" json:"brand_name,omitempty"`
	VendorId         *int32                           `protobuf:"varint,2,opt,name=vendor_id,json=vendorId" json:"vendor_id,omitempty"`
	VendorString     *string                          `protobuf:"bytes,3,opt,name=vendor_string,json=vendorString" json:"vendor_string,omitempty"`
	FeatureSet       []uint64                         `protobuf:"varint,4,rep,name=feature_set,json=featureSet" json:"feature_set,omitempty"`
	PhysicalCores    *int32                           `protobuf:"varint,5,opt,name=physical_cores,json=physicalCores" json:"physical_cores,omitempty"`
	ThreadsPerCore   *int32                           `protobuf:"varint,6,opt,name=threads_per_core,json=threadsPerCore" json:"threads_per_core,omitempty"`
	LogicalCores     *int32                           `protobuf:"varint,7,opt,name=logical_cores,json=logicalCores" json:"logical_cores,omitempty"`
	Family           *int32                           `protobuf:"varint,8,opt,name=family" json:"family,omitempty"`
	Model            *int32                           `protobuf:"varint,9,opt,name=model" json:"model,omitempty"`
	Stepping         *int32                           `protobuf:"varint,10,opt,name=stepping" json:"stepping,omitempty"`
	CacheLine        *int32                           `protobuf:"varint,11,opt,name=cache_line,json=cacheLine" json:"cache_line,omitempty"`
	Hz               *int64                           `protobuf:"varint,12,opt,name=hz" json:"hz,omitempty"`
	BoostFreq        *int64                           `protobuf:"varint,13,opt,name=boost_freq,json=boostFreq" json:"boost_freq,omitempty"`
	Cache            *CPUInfo_CacheInfo               `protobuf:"bytes,14,opt,name=cache" json:"cache,omitempty"`
	Sgx              *CPUInfo_SGXSupport              `protobuf:"bytes,15,opt,name=sgx" json:"sgx,omitempty"`
	AmdMemEncryption *CPUInfo_AMDMemEncryptionSupport `protobuf:"bytes,16,opt,name=amd_mem_encryption,json=amdMemEncryption" json:"amd_mem_encryption,omitempty"`
	Avx10Level       *uint32                          `protobuf:"varint,17,opt,name=avx10_level,json=avx10Level" json:"avx10_level,omitempty"`
}

func (x *CPUInfo) Reset() {
	*x = CPUInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lxd_migration_migrate_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPUInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUInfo) ProtoMessage() {}

func (x *CPUInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lxd_migration_migrate_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUInfo.ProtoReflect.Descriptor instead.
func (*CPUInfo) Descriptor() ([]byte, []int) {
	return file_lxd_migration_migrate_proto_rawDescGZIP(), []int{7}
}

func (x *CPUInfo) GetBrandName() string {
	if x != nil && x.BrandName != nil {
		return *x.BrandName
	}
	return ""
}

func (x *CPUInfo) GetVendorId() int32 {
	if x != nil && x.VendorId != nil {
		return *x.VendorId
	}
	return 0
}

func (x *CPUInfo) GetVendorString() string {
	if x != nil && x.VendorString != nil {
		return *x.VendorString
	}
	return ""
}

func (x *CPUInfo) GetFeatureSet() []uint64 {
	if x != nil {
		return x.FeatureSet
	}
	return nil
}

func (x *CPUInfo) GetPhysicalCores() int32 {
	if x != nil && x.PhysicalCores != nil {
		return *x.PhysicalCores
	}
	return 0
}

func (x *CPUInfo) GetThreadsPerCore() int32 {
	if x != nil && x.ThreadsPerCore != nil {
		return *x.ThreadsPerCore
	}
	return 0
}

func (x *CPUInfo) GetLogicalCores() int32 {
	if x != nil && x.LogicalCores != nil {
		return *x.LogicalCores
	}
	return 0
}

func (x *CPUInfo) GetFamily() int32 {
	if x != nil && x.Family != nil {
		return *x.Family
	}
	return 0
}

func (x *CPUInfo) GetModel() int32 {
	if x != nil && x.Model != nil {
		return *x.Model
	}
	return 0
}

func (x *CPUInfo) GetStepping() int32 {
	if x != nil && x.Stepping != nil {
		return *x.Stepping
	}
	return 0
}

func (x *CPUInfo) GetCacheLine() int32 {
	if x != nil && x.CacheLine != nil {
		return *x.CacheLine
	}
	return 0
}

func (x *CPUInfo) GetHz() int64 {
	if x != nil && x.Hz != nil {
		return *x.Hz
	}
	return 0
}

func (x *CPUInfo) GetBoostFreq() int64 {
	if x != nil && x.BoostFreq != nil {
		return *x.BoostFreq
	}
	return 0
}

func (x *CPUInfo) GetCache() *CPUInfo_CacheInfo {
	if x != nil {
		return x.Cache
	}
	return nil
}

func (x *CPUInfo) GetSgx() *CPUInfo_SGXSupport {
	if x != nil {
		return x.Sgx
	}
	return nil
}

func (x *CPUInfo) GetAmdMemEncryption() *CPUInfo_AMDMemEncryptionSupport {
	if x != nil {
		return x.AmdMemEncryption
	}
	return nil
}

func (x *CPUInfo) GetAvx10Level() uint32 {
	if x != nil && x.Avx10Level != nil {
		return *x.Avx10Level
	}
	return 0
}

type MigrationAutoStatefulReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AutoStatefulMigration *bool `protobuf:"varint,1,req,name=autoStatefulMigration" json:"autoStatefulMigration,omitempty"`
}

func (x *MigrationAutoStatefulReq) Reset() {
	*x = MigrationAutoStatefulReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lxd_migration_migrate_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrationAutoStatefulReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrationAutoStatefulReq) ProtoMessage() {}

func (x *MigrationAutoStatefulReq) ProtoReflect() protoreflect.Message {
	mi := &file_lxd_migration_migrate_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrationAutoStatefulReq.ProtoReflect.Descriptor instead.
func (*MigrationAutoStatefulReq) Descriptor() ([]byte, []int) {
	return file_lxd_migration_migrate_proto_rawDescGZIP(), []int{8}
}

func (x *MigrationAutoStatefulReq) GetAutoStatefulMigration() bool {
	if x != nil && x.AutoStatefulMigration != nil {
		return *x.AutoStatefulMigration
	}
	return false
}

type MigrationAutoStatefulResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
}

func (x *MigrationAutoStatefulResp) Reset() {
	*x = MigrationAutoStatefulResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lxd_migration_migrate_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrationAutoStatefulResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrationAutoStatefulResp) ProtoMessage() {}

func (x *MigrationAutoStatefulResp) ProtoReflect() protoreflect.Message {
	mi := &file_lxd_migration_migrate_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrationAutoStatefulResp.ProtoReflect.Descriptor instead.
func (*MigrationAutoStatefulResp) Descriptor() ([]byte, []int) {
	return file_lxd_migration_migrate_proto_rawDescGZIP(), []int{9}
}

func (x *MigrationAutoStatefulResp) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

type MigrationHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fs                    *MigrationFSType `protobuf:"varint,1,req,name=fs,enum=migration.MigrationFSType" json:"fs,omitempty"`
	Criu                  *CRIUType        `protobuf:"varint,2,opt,name=criu,enum=migration.CRIUType" json:"criu,omitempty"`
	Idmap                 []*IDMapType     `protobuf:"bytes,3,rep,name=idmap" json:"idmap,omitempty"`
	SnapshotNames         []string         `protobuf:"bytes,4,rep,name=snapshotNames" json:"snapshotNames,omitempty"`
	Snapshots             []*Snapshot      `protobuf:"bytes,5,rep,name=snapshots" json:"snapshots,omitempty"`
	Predump               *bool            `protobuf:"varint,7,opt,name=predump" json:"predump,omitempty"`
	RsyncFeatures         *RsyncFeatures   `protobuf:"bytes,8,opt,name=rsyncFeatures" json:"rsyncFeatures,omitempty"`
	Refresh               *bool            `protobuf:"varint,9,opt,name=refresh" json:"refresh,omitempty"`
	ZfsFeatures           *ZfsFeatures     `protobuf:"bytes,10,opt,name=zfsFeatures" json:"zfsFeatures,omitempty"`
	VolumeSize            *int64           `protobuf:"varint,11,opt,name=volumeSize" json:"volumeSize,omitempty"`
	BtrfsFeatures         *BtrfsFeatures   `protobuf:"bytes,12,opt,name=btrfsFeatures" json:"btrfsFeatures,omitempty"`
	IndexHeaderVersion    *uint32          `protobuf:"varint,13,opt,name=indexHeaderVersion" json:"indexHeaderVersion,omitempty"`
	CpuInfo               *CPUInfo         `protobuf:"bytes,14,opt,name=cpuInfo" json:"cpuInfo,omitempty"`
	AutoStatefulMigration *bool            `protobuf:"varint,15,opt,name=autoStatefulMigration" json:"autoStatefulMigration,omitempty"`
}

func (x *MigrationHeader) Reset() {
	*x = MigrationHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lxd_migration_migrate_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrationHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrationHeader) ProtoMessage() {}

func (x *MigrationHeader) ProtoReflect() protoreflect.Message {
	mi := &file_lxd_migration_migrate_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrationHeader.ProtoReflect.Descriptor instead.
func (*MigrationHeader) Descriptor() ([]byte, []int) {
	return file_lxd_migration_migrate_proto_rawDescGZIP(), []int{10}
}

func (x *MigrationHeader) GetFs() MigrationFSType {
	if x != nil && x.Fs != nil {
		return *x.Fs
	}
	return MigrationFSType_RSYNC
}

func (x *MigrationHeader) GetCriu() CRIUType {
	if x != nil && x.Criu != nil {
		return *x.Criu
	}
	return CRIUType_CRIU_RSYNC
}

func (x *MigrationHeader) GetIdmap() []*IDMapType {
	if x != nil {
		return x.Idmap
	}
	return nil
}

func (x *MigrationHeader) GetSnapshotNames() []string {
	if x != nil {
		return x.SnapshotNames
	}
	return nil
}

func (x *MigrationHeader) GetSnapshots() []*Snapshot {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

func (x *MigrationHeader) GetPredump() bool {
	if x != nil && x.Predump != nil {
		return *x.Predump
	}
	return false
}

func (x *MigrationHeader) GetRsyncFeatures() *RsyncFeatures {
	if x != nil {
		return x.RsyncFeatures
	}
	return nil
}

func (x *MigrationHeader) GetRefresh() bool {
	if x != nil && x.Refresh != nil {
		return *x.Refresh
	}
	return false
}

func (x *MigrationHeader) GetZfsFeatures() *ZfsFeatures {
	if x != nil {
		return x.ZfsFeatures
	}
	return nil
}

func (x *MigrationHeader) GetVolumeSize() int64 {
	if x != nil && x.VolumeSize != nil {
		return *x.VolumeSize
	}
	return 0
}

func (x *MigrationHeader) GetBtrfsFeatures() *BtrfsFeatures {
	if x != nil {
		return x.BtrfsFeatures
	}
	return nil
}

func (x *MigrationHeader) GetIndexHeaderVersion() uint32 {
	if x != nil && x.IndexHeaderVersion != nil {
		return *x.IndexHeaderVersion
	}
	return 0
}

func (x *MigrationHeader) GetCpuInfo() *CPUInfo {
	if x != nil {
		return x.CpuInfo
	}
	return nil
}

func (x *MigrationHeader) GetAutoStatefulMigration() bool {
	if x != nil && x.AutoStatefulMigration != nil {
		return *x.AutoStatefulMigration
	}
	return false
}

type MigrationControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	// optional failure message if sending a failure
	Message *string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (x *MigrationControl) Reset() {
	*x = MigrationControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lxd_migration_migrate_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrationControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrationControl) ProtoMessage() {}

func (x *MigrationControl) ProtoReflect() protoreflect.Message {
	mi := &file_lxd_migration_migrate_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrationControl.ProtoReflect.Descriptor instead.
func (*MigrationControl) Descriptor() ([]byte, []int) {
	return file_lxd_migration_migrate_proto_rawDescGZIP(), []int{11}
}

func (x *MigrationControl) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *MigrationControl) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type MigrationSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinalPreDump *bool `protobuf:"varint,1,req,name=finalPreDump" json:"finalPreDump,omitempty"`
}

func (x *MigrationSync) Reset() {
	*x = MigrationSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lxd_migration_migrate_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrationSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrationSync) ProtoMessage() {}

func (x *MigrationSync) ProtoReflect() protoreflect.Message {
	mi := &file_lxd_migration_migrate_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrationSync.ProtoReflect.Descriptor instead.
func (*MigrationSync) Descriptor() ([]byte, []int) {
	return file_lxd_migration_migrate_proto_rawDescGZIP(), []int{12}
}

func (x *MigrationSync) GetFinalPreDump() bool {
	if x != nil && x.FinalPreDump != nil {
		return *x.FinalPreDump
	}
	return false
}

type CPUInfo_SGXEPCSection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseAddress *uint64 `protobuf:"varint,1,opt,name=base_address,json=baseAddress" json:"base_address,omitempty"`
	EpcSize     *uint64 `protobuf:"varint,2,opt,name=epc_size,json=epcSize" json:"epc_size,omitempty"`
}

func (x *CPUInfo_SGXEPCSection) Reset() {
	*x = CPUInfo_SGXEPCSection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lxd_migration_migrate_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPUInfo_SGXEPCSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUInfo_SGXEPCSection) ProtoMessage() {}

func (x *CPUInfo_SGXEPCSection) ProtoReflect() protoreflect.Message {
	mi := &file_lxd_migration_migrate_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUInfo_SGXEPCSection.ProtoReflect.Descriptor instead.
func (*CPUInfo_SGXEPCSection) Descriptor() ([]byte, []int) {
	return file_lxd_migration_migrate_proto_rawDescGZIP(), []int{7, 0}
}

func (x *CPUInfo_SGXEPCSection) GetBaseAddress() uint64 {
	if x != nil && x.BaseAddress != nil {
		return *x.BaseAddress
	}
	return 0
}

func (x *CPUInfo_SGXEPCSection) GetEpcSize() uint64 {
	if x != nil && x.EpcSize != nil {
		return *x.EpcSize
	}
	return 0
}

type CPUInfo_SGXSupport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Available            *bool                    `protobuf:"varint,1,opt,name=available" json:"available,omitempty"`
	LaunchControl        *bool                    `protobuf:"varint,2,opt,name=launch_control,json=launchControl" json:"launch_control,omitempty"`
	Sgx1Supported        *bool                    `protobuf:"varint,3,opt,name=sgx1_supported,json=sgx1Supported" json:"sgx1_supported,omitempty"`
	Sgx2Supported        *bool                    `protobuf:"varint,4,opt,name=sgx2_supported,json=sgx2Supported" json:"sgx2_supported,omitempty"`
	MaxEnclaveSizeNot_64 *int64                   `protobuf:"varint,5,opt,name=max_enclave_size_not_64,json=maxEnclaveSizeNot64" json:"max_enclave_size_not_64,omitempty"`
	MaxEnclaveSize_64    *int64                   `protobuf:"varint,6,opt,name=max_enclave_size_64,json=maxEnclaveSize64" json:"max_enclave_size_64,omitempty"`
	EpcSections          []*CPUInfo_SGXEPCSection `protobuf:"bytes,7,rep,name=epc_sections,json=epcSections" json:"epc_sections,omitempty"`
}

func (x *CPUInfo_SGXSupport) Reset() {
	*x = CPUInfo_SGXSupport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lxd_migration_migrate_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPUInfo_SGXSupport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUInfo_SGXSupport) ProtoMessage() {}

func (x *CPUInfo_SGXSupport) ProtoReflect() protoreflect.Message {
	mi := &file_lxd_migration_migrate_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUInfo_SGXSupport.ProtoReflect.Descriptor instead.
func (*CPUInfo_SGXSupport) Descriptor() ([]byte, []int) {
	return file_lxd_migration_migrate_proto_rawDescGZIP(), []int{7, 1}
}

func (x *CPUInfo_SGXSupport) GetAvailable() bool {
	if x != nil && x.Available != nil {
		return *x.Available
	}
	return false
}

func (x *CPUInfo_SGXSupport) GetLaunchControl() bool {
	if x != nil && x.LaunchControl != nil {
		return *x.LaunchControl
	}
	return false
}

func (x *CPUInfo_SGXSupport) GetSgx1Supported() bool {
	if x != nil && x.Sgx1Supported != nil {
		return *x.Sgx1Supported
	}
	return false
}

func (x *CPUInfo_SGXSupport) GetSgx2Supported() bool {
	if x != nil && x.Sgx2Supported != nil {
		return *x.Sgx2Supported
	}
	return false
}

func (x *CPUInfo_SGXSupport) GetMaxEnclaveSizeNot_64() int64 {
	if x != nil && x.MaxEnclaveSizeNot_64 != nil {
		return *x.MaxEnclaveSizeNot_64
	}
	return 0
}

func (x *CPUInfo_SGXSupport) GetMaxEnclaveSize_64() int64 {
	if x != nil && x.MaxEnclaveSize_64 != nil {
		return *x.MaxEnclaveSize_64
	}
	return 0
}

func (x *CPUInfo_SGXSupport) GetEpcSections() []*CPUInfo_SGXEPCSection {
	if x != nil {
		return x.EpcSections
	}
	return nil
}

type CPUInfo_AMDMemEncryptionSupport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Available          *bool   `protobuf:"varint,1,opt,name=available" json:"available,omitempty"`
	CBitPosition       *uint32 `protobuf:"varint,2,opt,name=c_bit_position,json=cBitPosition" json:"c_bit_position,omitempty"`
	NumVmpl            *uint32 `protobuf:"varint,3,opt,name=num_vmpl,json=numVmpl" json:"num_vmpl,omitempty"`
	PhysAddrReduction  *uint32 `protobuf:"varint,4,opt,name=phys_addr_reduction,json=physAddrReduction" json:"phys_addr_reduction,omitempty"`
	NumEncryptedGuests *uint32 `protobuf:"varint,5,opt,name=num_encrypted_guests,json=numEncryptedGuests" json:"num_encrypted_guests,omitempty"`
	MinSevNoEsAsid     *uint32 `protobuf:"varint,6,opt,name=min_sev_no_es_asid,json=minSevNoEsAsid" json:"min_sev_no_es_asid,omitempty"`
}

func (x *CPUInfo_AMDMemEncryptionSupport) Reset() {
	*x = CPUInfo_AMDMemEncryptionSupport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lxd_migration_migrate_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPUInfo_AMDMemEncryptionSupport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUInfo_AMDMemEncryptionSupport) ProtoMessage() {}

func (x *CPUInfo_AMDMemEncryptionSupport) ProtoReflect() protoreflect.Message {
	mi := &file_lxd_migration_migrate_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUInfo_AMDMemEncryptionSupport.ProtoReflect.Descriptor instead.
func (*CPUInfo_AMDMemEncryptionSupport) Descriptor() ([]byte, []int) {
	return file_lxd_migration_migrate_proto_rawDescGZIP(), []int{7, 2}
}

func (x *CPUInfo_AMDMemEncryptionSupport) GetAvailable() bool {
	if x != nil && x.Available != nil {
		return *x.Available
	}
	return false
}

func (x *CPUInfo_AMDMemEncryptionSupport) GetCBitPosition() uint32 {
	if x != nil && x.CBitPosition != nil {
		return *x.CBitPosition
	}
	return 0
}

func (x *CPUInfo_AMDMemEncryptionSupport) GetNumVmpl() uint32 {
	if x != nil && x.NumVmpl != nil {
		return *x.NumVmpl
	}
	return 0
}

func (x *CPUInfo_AMDMemEncryptionSupport) GetPhysAddrReduction() uint32 {
	if x != nil && x.PhysAddrReduction != nil {
		return *x.PhysAddrReduction
	}
	return 0
}

func (x *CPUInfo_AMDMemEncryptionSupport) GetNumEncryptedGuests() uint32 {
	if x != nil && x.NumEncryptedGuests != nil {
		return *x.NumEncryptedGuests
	}
	return 0
}

func (x *CPUInfo_AMDMemEncryptionSupport) GetMinSevNoEsAsid() uint32 {
	if x != nil && x.MinSevNoEsAsid != nil {
		return *x.MinSevNoEsAsid
	}
	return 0
}

type CPUInfo_CacheInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	L1I *int32 `protobuf:"varint,1,opt,name=l1i" json:"l1i,omitempty"`
	L1D *int32 `protobuf:"varint,2,opt,name=l1d" json:"l1d,omitempty"`
	L2  *int32 `protobuf:"varint,3,opt,name=l2" json:"l2,omitempty"`
	L3  *int32 `protobuf:"varint,4,opt,name=l3" json:"l3,omitempty"`
}

func (x *CPUInfo_CacheInfo) Reset() {
	*x = CPUInfo_CacheInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lxd_migration_migrate_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPUInfo_CacheInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUInfo_CacheInfo) ProtoMessage() {}

func (x *CPUInfo_CacheInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lxd_migration_migrate_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUInfo_CacheInfo.ProtoReflect.Descriptor instead.
func (*CPUInfo_CacheInfo) Descriptor() ([]byte, []int) {
	return file_lxd_migration_migrate_proto_rawDescGZIP(), []int{7, 3}
}

func (x *CPUInfo_CacheInfo) GetL1I() int32 {
	if x != nil && x.L1I != nil {
		return *x.L1I
	}
	return 0
}

func (x *CPUInfo_CacheInfo) GetL1D() int32 {
	if x != nil && x.L1D != nil {
		return *x.L1D
	}
	return 0
}

func (x *CPUInfo_CacheInfo) GetL2() int32 {
	if x != nil && x.L2 != nil {
		return *x.L2
	}
	return 0
}

func (x *CPUInfo_CacheInfo) GetL3() int32 {
	if x != nil && x.L3 != nil {
		return *x.L3
	}
	return 0
}

var File_lxd_migration_migrate_proto protoreflect.FileDescriptor

var file_lxd_migration_migrate_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6c, 0x78, 0x64, 0x2f, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6d,
	0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7f, 0x0a, 0x09, 0x49, 0x44, 0x4d, 0x61,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x73, 0x67, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x67, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x73, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x6e, 0x73, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x61, 0x70, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x08, 0x6d, 0x61, 0x70, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x30, 0x0a, 0x06, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x47, 0x0a, 0x06, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x69, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0xf0, 0x02, 0x0a, 0x08, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x69, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65,
	0x72, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x02, 0x28, 0x08, 0x52, 0x09, 0x65, 0x70, 0x68, 0x65, 0x6d,
	0x65, 0x72, 0x61, 0x6c, 0x12, 0x35, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x69, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x0c, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x18, 0x07, 0x20, 0x02, 0x28,
	0x08, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x0d, 0x72, 0x73, 0x79, 0x6e,
	0x63, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x78, 0x61, 0x74,
	0x74, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x78, 0x61, 0x74, 0x74, 0x72,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x6f, 0x6d,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x69, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x62, 0x69,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x22, 0x77, 0x0a, 0x0b, 0x7a,
	0x66, 0x73, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x7a, 0x76, 0x6f, 0x6c,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5a,
	0x76, 0x6f, 0x6c, 0x73, 0x22, 0x9d, 0x01, 0x0a, 0x0d, 0x62, 0x74, 0x72, 0x66, 0x73, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x2b, 0x0a, 0x11, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x12, 0x34,
	0x0a, 0x16, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x55,
	0x75, 0x69, 0x64, 0x73, 0x22, 0xee, 0x0a, 0x0a, 0x07, 0x43, 0x50, 0x55, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x74,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53,
	0x65, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x68, 0x79, 0x73,
	0x69, 0x63, 0x61, 0x6c, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x50, 0x65, 0x72, 0x43,
	0x6f, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x61, 0x6c, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x6d, 0x69,
	0x6c, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x65, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x65, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x4c, 0x69, 0x6e,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x7a, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x68,
	0x7a, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x46, 0x72, 0x65, 0x71,
	0x12, 0x32, 0x0a, 0x05, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x50, 0x55, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x12, 0x2f, 0x0a, 0x03, 0x73, 0x67, 0x78, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x50,
	0x55, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x47, 0x58, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x03, 0x73, 0x67, 0x78, 0x12, 0x58, 0x0a, 0x12, 0x61, 0x6d, 0x64, 0x5f, 0x6d, 0x65, 0x6d,
	0x5f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x50,
	0x55, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x4d, 0x44, 0x4d, 0x65, 0x6d, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x10, 0x61,
	0x6d, 0x64, 0x4d, 0x65, 0x6d, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x78, 0x31, 0x30, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x76, 0x78, 0x31, 0x30, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x1a, 0x4d, 0x0a, 0x0d, 0x53, 0x47, 0x58, 0x45, 0x50, 0x43, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x70, 0x63, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x70, 0x63, 0x53, 0x69, 0x7a, 0x65, 0x1a,
	0xc9, 0x02, 0x0a, 0x0a, 0x53, 0x47, 0x58, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x67, 0x78, 0x31, 0x5f, 0x73, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x67, 0x78,
	0x31, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x67,
	0x78, 0x32, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x73, 0x67, 0x78, 0x32, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x12, 0x34, 0x0a, 0x17, 0x6d, 0x61, 0x78, 0x5f, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x36, 0x34, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x13, 0x6d, 0x61, 0x78, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x4e, 0x6f, 0x74, 0x36, 0x34, 0x12, 0x2d, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f, 0x65,
	0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x36, 0x34, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x36, 0x34, 0x12, 0x43, 0x0a, 0x0c, 0x65, 0x70, 0x63, 0x5f, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d,
	0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x50, 0x55, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x53, 0x47, 0x58, 0x45, 0x50, 0x43, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x65, 0x70, 0x63, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x86, 0x02, 0x0a, 0x17,
	0x41, 0x4d, 0x44, 0x4d, 0x65, 0x6d, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x5f, 0x62, 0x69, 0x74, 0x5f, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63,
	0x42, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6e,
	0x75, 0x6d, 0x5f, 0x76, 0x6d, 0x70, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6e,
	0x75, 0x6d, 0x56, 0x6d, 0x70, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x68, 0x79, 0x73, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x5f, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x11, 0x70, 0x68, 0x79, 0x73, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x6e, 0x75, 0x6d, 0x5f, 0x65, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x67, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6e, 0x75, 0x6d, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x65, 0x64, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x12, 0x6d, 0x69, 0x6e, 0x5f,
	0x73, 0x65, 0x76, 0x5f, 0x6e, 0x6f, 0x5f, 0x65, 0x73, 0x5f, 0x61, 0x73, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x76, 0x4e, 0x6f, 0x45, 0x73,
	0x41, 0x73, 0x69, 0x64, 0x1a, 0x4f, 0x0a, 0x09, 0x43, 0x61, 0x63, 0x68, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x31, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6c, 0x31, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x31, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x6c, 0x31, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x6c, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x6c, 0x33, 0x22, 0x50, 0x0a, 0x18, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x52, 0x65,
	0x71, 0x12, 0x34, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75,
	0x6c, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08,
	0x52, 0x15, 0x61, 0x75, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x4d, 0x69,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x35, 0x0a, 0x19, 0x4d, 0x69, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x8d,
	0x05, 0x0a, 0x0f, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x2a, 0x0a, 0x02, 0x66, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x1a,
	0x2e, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x53, 0x54, 0x79, 0x70, 0x65, 0x52, 0x02, 0x66, 0x73, 0x12, 0x27,
	0x0a, 0x04, 0x63, 0x72, 0x69, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6d,
	0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x52, 0x49, 0x55, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x63, 0x72, 0x69, 0x75, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x64, 0x6d, 0x61, 0x70,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x49, 0x44, 0x4d, 0x61, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x69, 0x64,
	0x6d, 0x61, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x09, 0x73, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d,
	0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x52, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x72, 0x65, 0x64, 0x75, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70,
	0x72, 0x65, 0x64, 0x75, 0x6d, 0x70, 0x12, 0x3e, 0x0a, 0x0d, 0x72, 0x73, 0x79, 0x6e, 0x63, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x72, 0x73, 0x79, 0x6e, 0x63, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x0d, 0x72, 0x73, 0x79, 0x6e, 0x63, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x12, 0x38, 0x0a, 0x0b, 0x7a, 0x66, 0x73, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x7a, 0x66, 0x73, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x0b, 0x7a,
	0x66, 0x73, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x74,
	0x72, 0x66, 0x73, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x62, 0x74,
	0x72, 0x66, 0x73, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x0d, 0x62, 0x74, 0x72,
	0x66, 0x73, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x70,
	0x75, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x69,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x50, 0x55, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x07, 0x63, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x6f,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x61, 0x75, 0x74, 0x6f, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x66, 0x75, 0x6c, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x46,
	0x0a, 0x10, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x33, 0x0a, 0x0d, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x50, 0x72, 0x65, 0x44, 0x75, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0c, 0x66,
	0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x65, 0x44, 0x75, 0x6d, 0x70, 0x2a, 0x4e, 0x0a, 0x0f, 0x4d,
	0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x53, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09,
	0x0a, 0x05, 0x52, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x54, 0x52,
	0x46, 0x53, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x5a, 0x46, 0x53, 0x10, 0x02, 0x12, 0x07, 0x0a,
	0x03, 0x52, 0x42, 0x44, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f,
	0x41, 0x4e, 0x44, 0x5f, 0x52, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x04, 0x2a, 0x3c, 0x0a, 0x08, 0x43,
	0x52, 0x49, 0x55, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x52, 0x49, 0x55, 0x5f,
	0x52, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x48, 0x41, 0x55, 0x4c,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07,
	0x56, 0x4d, 0x5f, 0x51, 0x45, 0x4d, 0x55, 0x10, 0x03, 0x42, 0x0f, 0x5a, 0x0d, 0x6c, 0x78, 0x64,
	0x2f, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
}

var (
	file_lxd_migration_migrate_proto_rawDescOnce sync.Once
	file_lxd_migration_migrate_proto_rawDescData = file_lxd_migration_migrate_proto_rawDesc
)

func file_lxd_migration_migrate_proto_rawDescGZIP() []byte {
	file_lxd_migration_migrate_proto_rawDescOnce.Do(func() {
		file_lxd_migration_migrate_proto_rawDescData = protoimpl.X.CompressGZIP(file_lxd_migration_migrate_proto_rawDescData)
	})
	return file_lxd_migration_migrate_proto_rawDescData
}

var file_lxd_migration_migrate_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_lxd_migration_migrate_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_lxd_migration_migrate_proto_goTypes = []interface{}{
	(MigrationFSType)(0),                    // 0: migration.MigrationFSType
	(CRIUType)(0),                           // 1: migration.CRIUType
	(*IDMapType)(nil),                       // 2: migration.IDMapType
	(*Config)(nil),                          // 3: migration.Config
	(*Device)(nil),                          // 4: migration.Device
	(*Snapshot)(nil),                        // 5: migration.Snapshot
	(*RsyncFeatures)(nil),                   // 6: migration.rsyncFeatures
	(*ZfsFeatures)(nil),                     // 7: migration.zfsFeatures
	(*BtrfsFeatures)(nil),                   // 8: migration.btrfsFeatures
	(*CPUInfo)(nil),                         // 9: migration.CPUInfo
	(*MigrationAutoStatefulReq)(nil),        // 10: migration.MigrationAutoStatefulReq
	(*MigrationAutoStatefulResp)(nil),       // 11: migration.MigrationAutoStatefulResp
	(*MigrationHeader)(nil),                 // 12: migration.MigrationHeader
	(*MigrationControl)(nil),                // 13: migration.MigrationControl
	(*MigrationSync)(nil),                   // 14: migration.MigrationSync
	(*CPUInfo_SGXEPCSection)(nil),           // 15: migration.CPUInfo.SGXEPCSection
	(*CPUInfo_SGXSupport)(nil),              // 16: migration.CPUInfo.SGXSupport
	(*CPUInfo_AMDMemEncryptionSupport)(nil), // 17: migration.CPUInfo.AMDMemEncryptionSupport
	(*CPUInfo_CacheInfo)(nil),               // 18: migration.CPUInfo.CacheInfo
}
var file_lxd_migration_migrate_proto_depIdxs = []int32{
	3,  // 0: migration.Device.config:type_name -> migration.Config
	3,  // 1: migration.Snapshot.localConfig:type_name -> migration.Config
	4,  // 2: migration.Snapshot.localDevices:type_name -> migration.Device
	18, // 3: migration.CPUInfo.cache:type_name -> migration.CPUInfo.CacheInfo
	16, // 4: migration.CPUInfo.sgx:type_name -> migration.CPUInfo.SGXSupport
	17, // 5: migration.CPUInfo.amd_mem_encryption:type_name -> migration.CPUInfo.AMDMemEncryptionSupport
	0,  // 6: migration.MigrationHeader.fs:type_name -> migration.MigrationFSType
	1,  // 7: migration.MigrationHeader.criu:type_name -> migration.CRIUType
	2,  // 8: migration.MigrationHeader.idmap:type_name -> migration.IDMapType
	5,  // 9: migration.MigrationHeader.snapshots:type_name -> migration.Snapshot
	6,  // 10: migration.MigrationHeader.rsyncFeatures:type_name -> migration.rsyncFeatures
	7,  // 11: migration.MigrationHeader.zfsFeatures:type_name -> migration.zfsFeatures
	8,  // 12: migration.MigrationHeader.btrfsFeatures:type_name -> migration.btrfsFeatures
	9,  // 13: migration.MigrationHeader.cpuInfo:type_name -> migration.CPUInfo
	15, // 14: migration.CPUInfo.SGXSupport.epc_sections:type_name -> migration.CPUInfo.SGXEPCSection
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_lxd_migration_migrate_proto_init() }
func file_lxd_migration_migrate_proto_init() {
	if File_lxd_migration_migrate_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lxd_migration_migrate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDMapType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lxd_migration_migrate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lxd_migration_migrate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lxd_migration_migrate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Snapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lxd_migration_migrate_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RsyncFeatures); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lxd_migration_migrate_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZfsFeatures); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lxd_migration_migrate_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BtrfsFeatures); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lxd_migration_migrate_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CPUInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lxd_migration_migrate_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrationAutoStatefulReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lxd_migration_migrate_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrationAutoStatefulResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lxd_migration_migrate_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrationHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lxd_migration_migrate_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrationControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lxd_migration_migrate_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrationSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lxd_migration_migrate_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CPUInfo_SGXEPCSection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lxd_migration_migrate_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CPUInfo_SGXSupport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lxd_migration_migrate_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CPUInfo_AMDMemEncryptionSupport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lxd_migration_migrate_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CPUInfo_CacheInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lxd_migration_migrate_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lxd_migration_migrate_proto_goTypes,
		DependencyIndexes: file_lxd_migration_migrate_proto_depIdxs,
		EnumInfos:         file_lxd_migration_migrate_proto_enumTypes,
		MessageInfos:      file_lxd_migration_migrate_proto_msgTypes,
	}.Build()
	File_lxd_migration_migrate_proto = out.File
	file_lxd_migration_migrate_proto_rawDesc = nil
	file_lxd_migration_migrate_proto_goTypes = nil
	file_lxd_migration_migrate_proto_depIdxs = nil
}
